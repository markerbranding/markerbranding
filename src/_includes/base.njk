{# `{{lang}}` must be set by you in the data cascade, see above note #}
<!doctype html>
<html lang="{{lang}}">
    <head>
        <!--<link rel="alternate" hreflang="{{lang}}" href="{{page.url}}">
        {% for link in page.url | locale_links %}
            <link rel="alternate" hreflang="{{link.lang}}" href="https://www.11ty.dev{{link.url}}">
        {% endfor %}-->


        {% set hreflangs = [ { "lang": "es", "path": "/es/" }, { "lang": "en", "path": "/en/" }] %}
        
        {% for hreflang in hreflangs %}
        <link rel="alternate" hreflang="{{ hreflang.lang }}" href="{{ site.url }}{{ hreflang.path }}" />
        {% endfor %}


        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>MARKER branding | {{ title }} - {{ description }}</title>
        <meta name="description" content="{{ seodescription }}">
        <meta name="keywords" content="{{ seokeywords }}">
        <meta name="author" content="Marker Branding">
        {% if robots %}<meta name=”robots” content="{{ robots }}">{% endif %}
        <link rel="apple-touch-icon" sizes="180x180" href="/assets/favicon/apple-touch-icon.png">
        <link rel="icon" type="image/png" sizes="32x32" href="/assets/favicon/favicon-32x32.png">
        <link rel="icon" type="image/png" sizes="16x16" href="/assets/favicon/favicon-16x16.png">
        <link rel="manifest" href="/assets/favicon/site.webmanifest">
        <link rel="preconnect" href="https://fonts.googleapis.com">
        <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
        <link href="https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,300;0,400;0,500;0,600;0,700;1,300;1,400;1,500;1,600;1,700&display=swap" rel="stylesheet">
        <link rel="stylesheet" href="/styles/style.css">
        <script defer src="https://identity.netlify.com/v1/netlify-identity-widget.js"></script>
        <script src="/assets/scripts/gsap.min.js"></script>
        <script src="/assets/scripts/ScrollTrigger.min.js"></script>
        <script src="/assets/scripts/ScrollSmoother.min.js"></script>
        <script src="/assets/scripts/ScrollToPlugin.min.js"></script>
        <script src="/assets/scripts/DrawSVGPlugin.min.js"></script>
        <script src="/assets/scripts/SplitText.min.js"></script>
        <link rel="stylesheet" href="/assets/scripts/splide.min.css">
        <link rel="stylesheet" href="/assets/scripts/splide-default.min.css">
        <script src="https://merida.altozano.com.mx/assets/jquery-3.7.1.min.js"></script>
        <script src="https://unpkg.com/@barba/core"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/bodymovin/5.9.6/lottie.min.js"></script>
        <style>
            #section__header, .article__work{background-color: {{ bgcolor }} !important;}
            .work__title h1{color: {{ namecolor }} !important;}
            .article__work h3, .work__title span a{color: {{ textcolor }} !important;}
            .oscuro .submenu{ background-color: {{ bgcolor }}; filter: brightness(1.3); }
            .oscuro .header__nav ul ul::before{ background-color: {{ bgcolor }}; }
            .column__3__mkt p picture::before, .column__3__mkt .video__wrapper .picture::before{ background-image: url({{accountTb}}); }
        </style>
    </head>
    
    <body class="page-{{bodyClass}} lang-{{label}} pro{{id}}" data-barba="wrapper">
        <div id="overlay">
            <div id="progstat"></div>
            <div id="progress"></div>
            <div id="progress__bg"></div>
            <div id="logoloader">
                <img src="/assets/loader.svg" alt="MARKER branding" height="50" />
            </div>
        </div>
        <div class="transition">
            <div class="inner__transition"></div>
        </div>
        <div id="mobile__trigger">
            <span></span>
            <span></span>
            <span></span>
        </div>
        <div id="mobile__menu">
        {% include 'nav.njk' %}
        <ul role="list">
            <li><a class="menu-{{lang}}" href="https://wa.me/+5219993314062"><span>Mensaje</span><span>Message</span></a></li>
            <li>
                {% for link in page.url | locale_links %}
                {%- if not loop.first %},{% endif %}
                <a href="{{link.url}}" lang="{{link.lang}}" hreflang="{{link.lang}}">{{link.lang}}</a>
                {% endfor %}
            </li>
        </ul>
    </div>
    <div id="mobile__active"></div>
        <div class="cursor-follower"><span>Ver</span></div>
        <div id="smooth-wrapper">
            <div id="smooth-content">
                {% include 'header.njk' %}
                <main>
                    {{ content | safe }}
                </main>
                {% include 'footer.njk' %}
            </div>
        </div>
        
        <script>
            if (window.netlifyIdentity) {
                window.netlifyIdentity.on("init", user => {
                if (!user) {
                    window.netlifyIdentity.on("login", () => {
                    document.location.href = "/admin/";
                    });
                }
                });
            }

            // Mobile menu:
            var check = document.querySelector('#mobile__trigger');
            var menu = document.querySelector('#mobile__menu');
            var bgActive = document.querySelector('#mobile__active');
            var both = [check, bgActive];
            both.forEach(function(element) {
                element.addEventListener('click', function(e) {
                    e.preventDefault();
                    check.classList.toggle('active');
                    menu.classList.toggle('show');
                    bgActive.classList.toggle('show');
                });
            });


            gsap.registerPlugin(ScrollTrigger, ScrollSmoother, DrawSVGPlugin, ScrollToPlugin, SplitText);

            let mm = gsap.matchMedia();

            mm.add("(min-width: 1025px)", () => {
                // GSAP ScrollSmoother init
            
                ScrollSmoother.create({
                    smooth: 1,
                    effects: true,
                    smoothTouch: 0.1,
                });
            });
            
            

            // Barba init
            barba.init({
                views: [
                    {
                        namespace: 'home',
                        async afterEnter(data) {      
                            homeGsap();  
                        }, 
                    },
                    {
                        namespace: 'work',
                        async afterEnter(data) { 
                            workGsap();
                        },
                    },
                    {
                        namespace: 'workAll',
                        async afterEnter(data) { 
                            workAllGsap();
                        },
                    },
                    {
                        namespace: 'branding',
                        async afterEnter(data) { 
                            brandingGsap();
                        },
                    },
                    {
                        namespace: 'web',
                        async afterEnter(data) { 
                            webGsap();
                        },
                    },
                    {
                        namespace: 'marketing',
                        async afterEnter(data) { 
                            marketingGsap();
                        },
                    },
                    {
                        namespace: 'about',
                        async afterEnter(data) { 
                            aboutGsap();
                        },
                    },
                    {
                        namespace: 'blog',
                        async afterEnter(data) { 
                            blogGsap();
                        },
                    },
                    {
                        namespace: 'blogAll',
                        async afterEnter(data) { 
                            blogAllGsap();
                        },
                    },
                    {
                        namespace: 'blogBranding',
                        async afterEnter(data) { 
                            blogBrandingGsap();
                        },
                    },
                    {
                        namespace: 'blogLogo',
                        async afterEnter(data) { 
                            blogLogoGsap();
                        },
                    },
                    {
                        namespace: 'blogWeb',
                        async afterEnter(data) { 
                            blogWebGsap();
                        },
                    },
                    {
                        namespace: 'blogMarketing',
                        async afterEnter(data) { 
                            blogMarketingGsap();
                        },
                    },
                    {
                        namespace: 'services',
                        async afterEnter(data) { 
                            servicesGsap();
                        },
                    },
                    {
                        namespace: 'servicesBranding',
                        async afterEnter(data) { 
                            servicesBrandingGsap();
                        },
                    },
                    {
                        namespace: 'servicesWeb',
                        async afterEnter(data) { 
                            servicesWebGsap();
                        },
                    },
                    {
                        namespace: 'servicesMarketing',
                        async afterEnter(data) { 
                            servicesMarketingGsap();
                        },
                    },
                    {
                        namespace: 'contact',
                        async afterEnter(data) { 
                            contactGsap();
                        },
                    },
                    {
                        namespace: 'thanks',
                        async afterEnter(data) { 
                            thanksGsap();
                        },
                    },
                    {
                        namespace: 'privacy',
                        async afterEnter(data) { 
                            privacyGsap();
                        },
                    },
                ],
                transitions: [
                    {
                        sync: false,
                        name: 'home',
                        to: { namespace: ['home'] },
                        async leave(data) {
                            await gsap.to(".transition", { height: "100%", ease: "power4.out", duration: 0.4 });
                            await gsap.to(".inner__transition", { delay: 0.0, height: "100%", ease: "power4.out", duration: 0.5 });
                            await gsap.to(data.current.container, { opacity: 0 }); },
                        async afterEnter(data) {
                            window.scrollTo(0, 0);
                            homeGsap();
                        }
                    },
                    {
                        sync: false,
                        name: 'work',
                        to: { namespace: ['work'] },
                        async leave(data) {
                            await gsap.to(".transition", { height: "100%", ease: "power4.out", duration: 0.4 });
                            await gsap.to(".inner__transition", { delay: 0.0, height: "100%", ease: "power4.out", duration: 0.5 });
                            await gsap.to(data.current.container, { opacity: 0 });
                        },
                        async afterEnter(data) {
                            window.scrollTo(0, 0);
                            workGsap();
                        }
                    },
                    {
                        sync: false,
                        name: 'workAll',
                        to: { namespace: ['workAll'] },
                        async leave(data) {
                            await gsap.to(".transition", { height: "100%", ease: "power4.out", duration: 0.4 });
                            await gsap.to(".inner__transition", { delay: 0.0, height: "100%", ease: "power4.out", duration: 0.5 });
                            await gsap.to(data.current.container, { opacity: 0 });
                        },
                        async afterEnter(data) {
                            window.scrollTo(0, 0);
                            workAllGsap();
                        }
                    },
                    {
                        sync: false,
                        name: 'branding',
                        to: { namespace: ['branding'] },
                        async leave(data) {
                            await gsap.to(".transition", { height: "100%", ease: "power4.out", duration: 0.4 });
                            await gsap.to(".inner__transition", { delay: 0.0, height: "100%", ease: "power4.out", duration: 0.5 });
                            await gsap.to(data.current.container, { opacity: 0 });
                        },
                        async afterEnter(data) {
                            window.scrollTo(0, 0);
                            brandingGsap();
                        }
                    },
                    {
                        sync: false,
                        name: 'web',
                        to: { namespace: ['web'] },
                        async leave(data) {
                            await gsap.to(".transition", { height: "100%", ease: "power4.out", duration: 0.4 });
                            await gsap.to(".inner__transition", { delay: 0.0, height: "100%", ease: "power4.out", duration: 0.5 });
                            await gsap.to(data.current.container, { opacity: 0 });
                        },
                        async afterEnter(data) {
                            window.scrollTo(0, 0);
                            webGsap();
                        }
                    },
                    {
                        sync: false,
                        name: 'marketing',
                        to: { namespace: ['marketing'] },
                        async leave(data) {
                            await gsap.to(".transition", { height: "100%", ease: "power4.out", duration: 0.4 });
                            await gsap.to(".inner__transition", { delay: 0.0, height: "100%", ease: "power4.out", duration: 0.5 });
                            await gsap.to(data.current.container, { opacity: 0 });
                        },
                        async afterEnter(data) {
                            window.scrollTo(0, 0);
                            marketingGsap();
                        }
                    },
                    {
                        sync: false,
                        name: 'about',
                        to: { namespace: ['about'] },
                        async leave(data) {
                            await gsap.to(".transition", { height: "100%", ease: "power4.out", duration: 0.4 });
                            await gsap.to(".inner__transition", { delay: 0.0, height: "100%", ease: "power4.out", duration: 0.5 });
                            await gsap.to(data.current.container, { opacity: 0 });
                        },
                        async afterEnter(data) {
                            window.scrollTo(0, 0);
                            aboutGsap();
                        }
                    },
                    {
                        sync: false,
                        name: 'blog',
                        to: { namespace: ['blog'] },
                        async leave(data) {
                            await gsap.to(".transition", { height: "100%", ease: "power4.out", duration: 0.4 });
                            await gsap.to(".inner__transition", { delay: 0.0, height: "100%", ease: "power4.out", duration: 0.5 });
                            await gsap.to(data.current.container, { opacity: 0 });
                        },
                        async afterEnter(data) {
                            window.scrollTo(0, 0);
                            blogGsap();
                        }
                    },
                    {
                        sync: false,
                        name: 'blogAll',
                        to: { namespace: ['blogAll'] },
                        async leave(data) {
                            await gsap.to(".transition", { height: "100%", ease: "power4.out", duration: 0.4 });
                            await gsap.to(".inner__transition", { delay: 0.0, height: "100%", ease: "power4.out", duration: 0.5 });
                            await gsap.to(data.current.container, { opacity: 0 });
                        },
                        async afterEnter(data) {
                            window.scrollTo(0, 0);
                            workAllGsap();
                        }
                    },
                    {
                        sync: false,
                        name: 'blogBranding',
                        to: { namespace: ['blogBranding'] },
                        async leave(data) {
                            await gsap.to(".transition", { height: "100%", ease: "power4.out", duration: 0.4 });
                            await gsap.to(".inner__transition", { delay: 0.0, height: "100%", ease: "power4.out", duration: 0.5 });
                            await gsap.to(data.current.container, { opacity: 0 });
                        },
                        async afterEnter(data) {
                            window.scrollTo(0, 0);
                            blogBrandingGsap();
                        }
                    },
                    {
                        sync: false,
                        name: 'blogWeb',
                        to: { namespace: ['blogWeb'] },
                        async leave(data) {
                            await gsap.to(".transition", { height: "100%", ease: "power4.out", duration: 0.4 });
                            await gsap.to(".inner__transition", { delay: 0.0, height: "100%", ease: "power4.out", duration: 0.5 });
                            await gsap.to(data.current.container, { opacity: 0 });
                        },
                        async afterEnter(data) {
                            window.scrollTo(0, 0);
                            blogWebGsap();
                        }
                    },
                    {
                        sync: false,
                        name: 'blogLogo',
                        to: { namespace: ['blogLogo'] },
                        async leave(data) {
                            await gsap.to(".transition", { height: "100%", ease: "power4.out", duration: 0.4 });
                            await gsap.to(".inner__transition", { delay: 0.0, height: "100%", ease: "power4.out", duration: 0.5 });
                            await gsap.to(data.current.container, { opacity: 0 });
                        },
                        async afterEnter(data) {
                            window.scrollTo(0, 0);
                            blogLogoGsap();
                        }
                    },
                    {
                        sync: false,
                        name: 'blogMarketing',
                        to: { namespace: ['blogMarketing'] },
                        async leave(data) {
                            await gsap.to(".transition", { height: "100%", ease: "power4.out", duration: 0.4 });
                            await gsap.to(".inner__transition", { delay: 0.0, height: "100%", ease: "power4.out", duration: 0.5 });
                            await gsap.to(data.current.container, { opacity: 0 });
                        },
                        async afterEnter(data) {
                            window.scrollTo(0, 0);
                            blogMarketingGsap();
                        }
                    },
                    {
                        sync: false,
                        name: 'services',
                        to: { namespace: ['services'] },
                        async leave(data) {
                            await gsap.to(".transition", { height: "100%", ease: "power4.out", duration: 0.4 });
                            await gsap.to(".inner__transition", { delay: 0.0, height: "100%", ease: "power4.out", duration: 0.5 });
                            await gsap.to(data.current.container, { opacity: 0 });
                        },
                        async afterEnter(data) {
                            window.scrollTo(0, 0);
                            servicesGsap();
                        }
                    },
                    {
                        sync: false,
                        name: 'servicesBranding',
                        to: { namespace: ['servicesBranding'] },
                        async leave(data) {
                            await gsap.to(".transition", { height: "100%", ease: "power4.out", duration: 0.4 });
                            await gsap.to(".inner__transition", { delay: 0.0, height: "100%", ease: "power4.out", duration: 0.5 });
                            await gsap.to(data.current.container, { opacity: 0 });
                        },
                        async afterEnter(data) {
                            window.scrollTo(0, 0);
                            servicesBrandingGsap();
                        }
                    },
                    {
                        sync: false,
                        name: 'servicesWeb',
                        to: { namespace: ['servicesWeb'] },
                        async leave(data) {
                            await gsap.to(".transition", { height: "100%", ease: "power4.out", duration: 0.4 });
                            await gsap.to(".inner__transition", { delay: 0.0, height: "100%", ease: "power4.out", duration: 0.5 });
                            await gsap.to(data.current.container, { opacity: 0 });
                        },
                        async afterEnter(data) {
                            window.scrollTo(0, 0);
                            servicesWebGsap();
                        }
                    },
                    {
                        sync: false,
                        name: 'servicesMarketing',
                        to: { namespace: ['servicesMarketing'] },
                        async leave(data) {
                            await gsap.to(".transition", { height: "100%", ease: "power4.out", duration: 0.4 });
                            await gsap.to(".inner__transition", { delay: 0.0, height: "100%", ease: "power4.out", duration: 0.5 });
                            await gsap.to(data.current.container, { opacity: 0 });
                        },
                        async afterEnter(data) {
                            window.scrollTo(0, 0);
                            servicesMarketingGsap();
                        }
                    },
                    {
                        sync: false,
                        name: 'contact',
                        to: { namespace: ['contact'] },
                        async leave(data) {
                            await gsap.to(".transition", { height: "100%", ease: "power4.out", duration: 0.4 });
                            await gsap.to(".inner__transition", { delay: 0.0, height: "100%", ease: "power4.out", duration: 0.5 });
                            await gsap.to(data.current.container, { opacity: 0 });
                        },
                        async afterEnter(data) {
                            window.scrollTo(0, 0);
                            contactGsap();
                        }
                    },
                    {
                        sync: false,
                        name: 'thanks',
                        to: { namespace: ['thanks'] },
                        async leave(data) {
                            await gsap.to(".transition", { height: "100%", ease: "power4.out", duration: 0.4 });
                            await gsap.to(".inner__transition", { delay: 0.0, height: "100%", ease: "power4.out", duration: 0.5 });
                            await gsap.to(data.current.container, { opacity: 0 });
                        },
                        async afterEnter(data) {
                            window.scrollTo(0, 0);
                            thanksGsap();
                        }
                    },
                    {
                        sync: false,
                        name: 'privacy',
                        to: { namespace: ['privacy'] },
                        async leave(data) {
                            await gsap.to(".transition", { height: "100%", ease: "power4.out", duration: 0.4 });
                            await gsap.to(".inner__transition", { delay: 0.0, height: "100%", ease: "power4.out", duration: 0.5 });
                            await gsap.to(data.current.container, { opacity: 0 });
                        },
                        async afterEnter(data) {
                            window.scrollTo(0, 0);
                            privacyGsap();
                        }
                    },
                ],
            });
        </script>
    </body>
</html>